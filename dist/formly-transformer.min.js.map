{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///dist/formly-transformer.min.js","webpack:///webpack/bootstrap acbcba6843d742ce5ef4","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular-formly-transformer/src/formly-transformer.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","formlyTransformer","formlyConfig","_this","_transformers","angular","isArray","extras","fieldTransform","push","run","apply","arguments","value","transformer","createError","fields","_this2","_len","formlyFieldTransformArgs","Array","_key","forEach","field","transformers","msg","concat","Error","$inject","service"],"mappings":";CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,kBAAAD,IAEAD,EAAA,kBAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,GAEtB,YAIA,SAASe,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAFhH,GAAIC,GAAe,WAAe,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,MAAO,UAAUR,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYZ,EAAiBH,EAAYiB,UAAWF,GAAiBC,GAAab,EAAiBH,EAAagB,GAAqBhB,ME1D5hBkB,EAAiB,WACV,QADPA,GACQC,GF+DT,GAAIC,GAAQjC,IAEZW,GAAgBX,KElEf+B,GAEF/B,KAAKgC,aAAeA,EACpBhC,KAAKkC,iBAEAC,QAAQC,QAAQpC,KAAKgC,aAAaK,OAAOC,kBAC5CtC,KAAKgC,aAAaK,OAAOC,mBAI3BtC,KAAKgC,aAAaK,OAAOC,eAAeC,KACtC,WACE,MAAON,GAAKO,IAAGC,MAAAR,EAAAS,aFuJpB,MA1EA3B,GEzFGgB,IF0FDJ,IAAK,WACLgB,MEnEK,SAACC,GACP,GAAI,kBAAsBA,GACxB,KAAM5C,MAAK6C,YAAW,gCAExB7C,MAAKkC,cAAcK,KAAKK,MFkFvBjB,IAAK,MACLgB,MErEA,SAACG,GFwEC,IAAK,GAFDC,GAAS/C,KAEJgD,EAAON,UAAUtB,OExEhB6B,EAAwBC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAH,EAAAG,MAAxBF,EAAwBE,EAAA,GAAAT,UAAAS,EAyBrC,OAtBIhB,SAAQC,QAAQU,IAClBA,EAAOM,QAAQ,SAACC,GACTA,EAAMC,eACTD,EAAMC,mBAMZtD,KAAKkC,cAAckB,QAAQ,SAACR,GAC1BA,EAAYrC,KAAIkC,MAAhBG,IACEC,YAAa,SAACU,GACZ,MAAOR,GAAKF,YAAYU,KAEzBT,GAAMU,OAAKP,MAIhBH,EAAOM,QAAQ,SAACC,SACPA,GAAMC,eAGRR,KF0FNnB,IAAK,cACLgB,ME5EQ,SAACY,GACV,MAAO,IAAIE,OAAK,uBAAwBF,OAnFtCxB,IAuFNA,GAAkB2B,SAAW,gBAE7BvB,QAAQtC,OAAO,qBACX,WAED8D,QAAQ,oBAAqB5B","file":"dist/formly-transformer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"formlyTransformer\"] = factory();\n\telse\n\t\troot[\"formlyTransformer\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"formlyTransformer\"] = factory();\n\telse\n\t\troot[\"formlyTransformer\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar formlyTransformer = (function () {\n\t  function formlyTransformer(formlyConfig) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, formlyTransformer);\n\t\n\t    this.formlyConfig = formlyConfig;\n\t    this._transformers = [];\n\t\n\t    if (!angular.isArray(this.formlyConfig.extras.fieldTransform)) {\n\t      this.formlyConfig.extras.fieldTransform = [];\n\t    }\n\t\n\t    // push to fieldTransform\n\t    this.formlyConfig.extras.fieldTransform.push(function () {\n\t      return _this.run.apply(_this, arguments);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Register transformer\n\t   *\n\t   * @method formlyTransformer.register\n\t   *\n\t   * @param {function} transformer - modification function (see formlyConfig.extras.fieldTransform)\n\t   */\n\t\n\t  _createClass(formlyTransformer, [{\n\t    key: 'register',\n\t    value: function register(transformer) {\n\t      if (\"function\" !== typeof transformer) {\n\t        throw this.createError('Transformer is not a function');\n\t      }\n\t      this._transformers.push(transformer);\n\t    }\n\t\n\t    /**\n\t     *  Runs all registered transformers and returns the modified fields array.\n\t     *  You can use it manually and with custom arguments but it is being triggered automatically by angular-formly module\n\t     *\n\t     * @method formlyTransformer.run\n\t     * @param {array} fields - see formlyConfig.extras.fieldTransform\n\t     * @param {object} model - see formlyConfig.extras.fieldTransform\n\t     * @param {object} form - see formlyConfig.extras.fieldTransform\n\t     * @param {object} formOptions - see formlyConfig.extras.fieldTransform\n\t     * @returns {array}\n\t     */\n\t  }, {\n\t    key: 'run',\n\t    value: function run(fields) {\n\t      var _this2 = this;\n\t\n\t      for (var _len = arguments.length, formlyFieldTransformArgs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        formlyFieldTransformArgs[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      // add transformers object to all fields\n\t      if (angular.isArray(fields)) {\n\t        fields.forEach(function (field) {\n\t          if (!field.transformers) {\n\t            field.transformers = {};\n\t          }\n\t        });\n\t      }\n\t\n\t      // run all transformers\n\t      this._transformers.forEach(function (transformer) {\n\t        transformer.call.apply(transformer, [{\n\t          createError: function createError(msg) {\n\t            return _this2.createError(msg);\n\t          }\n\t        }, fields].concat(formlyFieldTransformArgs));\n\t      });\n\t\n\t      // remove transformers\n\t      fields.forEach(function (field) {\n\t        delete field.transformers;\n\t      });\n\t\n\t      return fields;\n\t    }\n\t\n\t    //\n\t    // helpers\n\t    //\n\t\n\t    /**\n\t     * Create Error object with prefixed message\n\t     *\n\t     * @method formlyTransformer.createError\n\t     *\n\t     * @param {string} msg - error message\n\t     * @returns {Error}\n\t     */\n\t  }, {\n\t    key: 'createError',\n\t    value: function createError(msg) {\n\t      return new Error('[formlyTransformer] ' + msg);\n\t    }\n\t  }]);\n\t\n\t  return formlyTransformer;\n\t})();\n\t\n\tformlyTransformer.$inject = ['formlyConfig'];\n\t\n\tangular.module('formlyTransformer', ['formly']).service('formlyTransformer', formlyTransformer);\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** dist/formly-transformer.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap acbcba6843d742ce5ef4\n **/","class formlyTransformer {\n  constructor(formlyConfig) {\n    this.formlyConfig = formlyConfig;\n    this._transformers = [];\n\n    if (!angular.isArray(this.formlyConfig.extras.fieldTransform)) {\n      this.formlyConfig.extras.fieldTransform = [];\n    }\n\n    // push to fieldTransform\n    this.formlyConfig.extras.fieldTransform.push(\n      (...formlyFieldTransformArgs) => {\n        return this.run(...formlyFieldTransformArgs);\n      }\n    );\n  }\n\n  /**\n   * Register transformer\n   *\n   * @method formlyTransformer.register\n   *\n   * @param {function} transformer - modification function (see formlyConfig.extras.fieldTransform)\n   */\n  register(transformer) {\n    if (\"function\" !== typeof transformer) {\n      throw this.createError(`Transformer is not a function`);\n    }\n    this._transformers.push(transformer);\n  }\n\n  /**\n   *  Runs all registered transformers and returns the modified fields array.\n   *  You can use it manually and with custom arguments but it is being triggered automatically by angular-formly module\n   *\n   * @method formlyTransformer.run\n   * @param {array} fields - see formlyConfig.extras.fieldTransform\n   * @param {object} model - see formlyConfig.extras.fieldTransform\n   * @param {object} form - see formlyConfig.extras.fieldTransform\n   * @param {object} formOptions - see formlyConfig.extras.fieldTransform\n   * @returns {array}\n   */\n  run(fields, ...formlyFieldTransformArgs) {\n\n    // add transformers object to all fields\n    if (angular.isArray(fields)) {\n      fields.forEach((field) => {\n        if (!field.transformers) {\n          field.transformers = {};\n        }\n      });\n    }\n\n    // run all transformers\n    this._transformers.forEach((transformer) => {\n      transformer.call({\n        createError: (msg) => {\n          return this.createError(msg);\n        }\n      }, fields, ...formlyFieldTransformArgs);\n    });\n\n    // remove transformers\n    fields.forEach((field) => {\n      delete field.transformers;\n    });\n\n    return fields;\n  }\n\n  //\n  // helpers\n  //\n\n  /**\n   * Create Error object with prefixed message\n   *\n   * @method formlyTransformer.createError\n   *\n   * @param {string} msg - error message\n   * @returns {Error}\n   */\n  createError(msg) {\n    return new Error(`[formlyTransformer] ${msg}`);\n  }\n}\n\nformlyTransformer.$inject = ['formlyConfig'];\n\nangular.module('formlyTransformer', [\n    'formly'\n  ])\n  .service('formlyTransformer', formlyTransformer);\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular-formly-transformer/src/formly-transformer.js\n **/"],"sourceRoot":""}