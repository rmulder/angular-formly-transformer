{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///dist/formly-transformer.min.js","webpack:///webpack/bootstrap 6beb0fc070bdaf600e94","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Moje/angular-formly-packages/packages/wieldo_angular-formly-transformer/lib/client/main.js","webpack:///external \"angular2now\"","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Moje/angular-formly-packages/packages/wieldo_angular-formly-transformer/lib/client/formly-transformer.js","webpack:///external \"angular\"","webpack:///external {\"root\":\"ngFormly\",\"amd\":\"angular-formly\",\"commonjs2\":\"angular-formly\",\"commonjs\":\"angular-formly\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_require","SetModule","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","Service","Inject","formlyTransformer","formlyConfig","_this","_formlyTransformer","_transformers","angular","isArray","extras","fieldTransform","push","run","apply","arguments","value","transformer","createError","fields","_this2","_len","formlyFieldTransformArgs","Array","_key","forEach","field","transformers","msg","concat","Error","name"],"mappings":"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","file":"dist/formly-transformer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular2now\"), require(\"angular\"), require(\"angular-formly\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular2now\", \"angular\", \"angular-formly\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngFormlyTransformer\"] = factory(require(\"angular2now\"), require(\"angular\"), require(\"angular-formly\"));\n\telse\n\t\troot[\"ngFormlyTransformer\"] = factory(root[\"angular2now\"], root[\"angular\"], root[\"ngFormly\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular2now\"), require(\"angular\"), require(\"angular-formly\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular2now\", \"angular\", \"angular-formly\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngFormlyTransformer\"] = factory(require(\"angular2now\"), require(\"angular\"), require(\"angular-formly\"));\n\telse\n\t\troot[\"ngFormlyTransformer\"] = factory(root[\"angular2now\"], root[\"angular\"], root[\"ngFormly\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(3);\n\t\n\tvar _require = __webpack_require__(1);\n\t\n\tvar SetModule = _require.SetModule;\n\t\n\t// set module\n\tSetModule('formlyTransformer', [__webpack_require__(4)]);\n\t\n\t// load service\n\t__webpack_require__(2);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _require = __webpack_require__(1);\n\t\n\tvar SetModule = _require.SetModule;\n\tvar Service = _require.Service;\n\tvar Inject = _require.Inject;\n\t\n\tSetModule('formlyTransformer');\n\t\n\t/**\r\n\t * AngularJS Service\r\n\t *\r\n\t * @property formlyTransformer\r\n\t */\n\t\n\tvar formlyTransformer = (function () {\n\t    function formlyTransformer(formlyConfig) {\n\t        var _this = this;\n\t\n\t        _classCallCheck(this, _formlyTransformer);\n\t\n\t        this._transformers = [];\n\t\n\t        this.formlyConfig = formlyConfig;\n\t\n\t        if (!angular.isArray(this.formlyConfig.extras.fieldTransform)) {\n\t            this.formlyConfig.extras.fieldTransform = [];\n\t        }\n\t\n\t        // push to fieldTransform\n\t        this.formlyConfig.extras.fieldTransform.push(function () {\n\t            return _this.run.apply(_this, arguments);\n\t        });\n\t    }\n\t\n\t    /**\r\n\t     * Register transformer\r\n\t     *\r\n\t     * @method formlyTransformer.register\r\n\t     *\r\n\t     * @param {function} transformer - modification function (see formlyConfig.extras.fieldTransform)\r\n\t     */\n\t\n\t    _createClass(formlyTransformer, [{\n\t        key: 'register',\n\t        value: function register(transformer) {\n\t            if (\"function\" !== typeof transformer) {\n\t                throw this.createError('Transformer is not a function');\n\t            }\n\t            this._transformers.push(transformer);\n\t        }\n\t\n\t        /**\r\n\t         *  Runs all registered transformers and returns the modified fields array.\r\n\t         *  You can use it manually and with custom arguments but it is being triggered automatically by angular-formly module\r\n\t         *\r\n\t         * @method formlyTransformer.run\r\n\t         * @param {array} fields - see formlyConfig.extras.fieldTransform\r\n\t         * @param {object} model - see formlyConfig.extras.fieldTransform\r\n\t         * @param {object} form - see formlyConfig.extras.fieldTransform\r\n\t         * @param {object} formOptions - see formlyConfig.extras.fieldTransform\r\n\t         * @returns {array}\r\n\t         */\n\t    }, {\n\t        key: 'run',\n\t        value: function run(fields) {\n\t            var _this2 = this;\n\t\n\t            for (var _len = arguments.length, formlyFieldTransformArgs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t                formlyFieldTransformArgs[_key - 1] = arguments[_key];\n\t            }\n\t\n\t            // add transformers object to all fields\n\t            if (angular.isArray(fields)) {\n\t                fields.forEach(function (field) {\n\t                    if (!field.transformers) {\n\t                        field.transformers = {};\n\t                    }\n\t                });\n\t            }\n\t\n\t            // run all transformers\n\t            this._transformers.forEach(function (transformer) {\n\t                transformer.call.apply(transformer, [{\n\t                    createError: function createError(msg) {\n\t                        return _this2.createError(msg);\n\t                    }\n\t                }, fields].concat(formlyFieldTransformArgs));\n\t            });\n\t\n\t            // remove transformers\n\t            fields.forEach(function (field) {\n\t                delete field.transformers;\n\t            });\n\t\n\t            return fields;\n\t        }\n\t\n\t        //\n\t        // helpers\n\t        //\n\t\n\t        /**\r\n\t         * Create Error object with prefixed message\r\n\t         *\r\n\t         * @method formlyTransformer.createError\r\n\t         *\r\n\t         * @param {string} msg - error message\r\n\t         * @returns {Error}\r\n\t         */\n\t    }, {\n\t        key: 'createError',\n\t        value: function createError(msg) {\n\t            return new Error('[formlyTransformer] ' + msg);\n\t        }\n\t    }]);\n\t\n\t    var _formlyTransformer = formlyTransformer;\n\t    formlyTransformer = Inject(['formlyConfig'])(formlyTransformer) || formlyTransformer;\n\t    formlyTransformer = Service({\n\t        name: 'formlyTransformer'\n\t    })(formlyTransformer) || formlyTransformer;\n\t    return formlyTransformer;\n\t})();\n\n\t// injectables\n\n\t/**\r\n\t *\r\n\t * @type {array}\r\n\t * @private\r\n\t */\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** dist/formly-transformer.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6beb0fc070bdaf600e94\n **/","require('angular');\r\nconst {SetModule} = require('angular2-now');\r\n\r\n// set module\r\nSetModule('formlyTransformer', [require('angular-formly')]);\r\n\r\n// load service\r\nrequire('./formly-transformer');\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Moje/angular-formly-packages/packages/wieldo_angular-formly-transformer/lib/client/main.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular2now\"\n ** module id = 1\n ** module chunks = 0\n **/","const {SetModule, Service, Inject} = require('angular2-now');\r\n\r\nSetModule('formlyTransformer');\r\n@Service({\r\n    name: 'formlyTransformer'\r\n})\r\n@Inject(['formlyConfig'])\r\n    /**\r\n     * AngularJS Service\r\n     *\r\n     * @property formlyTransformer\r\n     */\r\nclass formlyTransformer {\r\n\r\n    // injectables\r\n    formlyConfig;\r\n\r\n    /**\r\n     *\r\n     * @type {array}\r\n     * @private\r\n     */\r\n    _transformers = [];\r\n\r\n    constructor(formlyConfig) {\r\n        this.formlyConfig = formlyConfig;\r\n\r\n        if (!angular.isArray(this.formlyConfig.extras.fieldTransform)) {\r\n            this.formlyConfig.extras.fieldTransform = [];\r\n        }\r\n\r\n        // push to fieldTransform\r\n        this.formlyConfig.extras.fieldTransform.push(\r\n            (...formlyFieldTransformArgs) => {\r\n                return this.run(...formlyFieldTransformArgs);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Register transformer\r\n     *\r\n     * @method formlyTransformer.register\r\n     *\r\n     * @param {function} transformer - modification function (see formlyConfig.extras.fieldTransform)\r\n     */\r\n    register(transformer) {\r\n        if (\"function\" !== typeof transformer) {\r\n            throw this.createError(`Transformer is not a function`);\r\n        }\r\n        this._transformers.push(transformer);\r\n    }\r\n\r\n    /**\r\n     *  Runs all registered transformers and returns the modified fields array.\r\n     *  You can use it manually and with custom arguments but it is being triggered automatically by angular-formly module\r\n     *\r\n     * @method formlyTransformer.run\r\n     * @param {array} fields - see formlyConfig.extras.fieldTransform\r\n     * @param {object} model - see formlyConfig.extras.fieldTransform\r\n     * @param {object} form - see formlyConfig.extras.fieldTransform\r\n     * @param {object} formOptions - see formlyConfig.extras.fieldTransform\r\n     * @returns {array}\r\n     */\r\n    run(fields, ...formlyFieldTransformArgs) {\r\n\r\n        // add transformers object to all fields\r\n        if (angular.isArray(fields)) {\r\n            fields.forEach((field) => {\r\n                if (!field.transformers) {\r\n                    field.transformers = {};\r\n                }\r\n            });\r\n        }\r\n\r\n        // run all transformers\r\n        this._transformers.forEach((transformer) => {\r\n            transformer.call({\r\n                createError: (msg) => {\r\n                    return this.createError(msg);\r\n                }\r\n            }, fields, ...formlyFieldTransformArgs);\r\n        });\r\n\r\n        // remove transformers\r\n        fields.forEach((field) => {\r\n            delete field.transformers;\r\n        });\r\n\r\n        return fields;\r\n    }\r\n\r\n    //\r\n    // helpers\r\n    //\r\n\r\n    /**\r\n     * Create Error object with prefixed message\r\n     *\r\n     * @method formlyTransformer.createError\r\n     *\r\n     * @param {string} msg - error message\r\n     * @returns {Error}\r\n     */\r\n    createError(msg) {\r\n        return new Error(`[formlyTransformer] ${msg}`);\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Moje/angular-formly-packages/packages/wieldo_angular-formly-transformer/lib/client/formly-transformer.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"ngFormly\",\"amd\":\"angular-formly\",\"commonjs2\":\"angular-formly\",\"commonjs\":\"angular-formly\"}\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}